#===============================================================================
# FROM 명령은 기본 이미지를 설정한다. 여기서는 ubuntu:20.04를 기본 이미지로 사용한다. 이는
# Docker 이미지를 빌드할 때 사용할 기본 운영 체제를 의미한다. 이 이미지는 Docker Hub에서
# 가져온다.
FROM ubuntu:20.04

#===============================================================================
# RUN 명령은 Docker 이미지 빌드 시 실행되는 쉘 명령이다. 각 RUN 명령은 새로운 이미지 레이어를
# 생성하며, 이 레이어에는 RUN 명령의 결과가 저장된다. 여기서는 RUN 명령을 여러 개 사용하지 않고 한
# 개로 사용한다. 이는 Docker 이미지의 레이어 수를 최소화하고, 이미지 크기를 줄이기 위한 것이다.
#
# 첫 번째 부분에서는 기본 저장소에서 OpenJDK, Maven, GnuPG, Software Properties Common
# 패키지를 설치한다.
#
# 두 번째 부분에서는 GitHub CLI를 설치한다. 기본 저장소에는 GitHub CLI 패키지가 없으므로, 이를
# 위해 GitHub 저장소를 추가한다.
#
# 마지막 부분에서는 불필요한 파일을 삭제하여 이미지 크기를 줄인다.
RUN apt-get update && \
    apt-get install -y openjdk-17-jdk-headless maven gnupg software-properties-common && \
    \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0 && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-key 23F3D4EA75716059 && \
    apt-add-repository 'deb [arch=amd64] https://cli.github.com/packages focal main' && \
    apt-get update && \
    apt-get install -y gh && \
    \
    rm -rf /var/lib/apt/lists/*

#===============================================================================
# 프로젝트의 pom.xml 파일을 이미지에 복사한다. 이 파일은 메이븐 의존성을 미리 설치하는 데 사용된다.
# COPY 명령은 Docker 이미지 빌드 시 실행되는 명령이며, 호스트 시스템의 파일이나 디렉토리를 Docker
# 이미지에 복사한다. 이 COPY 명령은 새로운 레이어를 생성하며, 대상 경로에 지정된 디렉토리가 존재하지
# 않으면 Docker는 이 디렉토리를 자동으로 생성한다. 또한, 대상 경로에 이미 파일이 존재하는 경우, 해당
# 파일을 새로운 파일로 덮어쓴다.
COPY ./maven_pom_files /tmp/maven_pom_files

#===============================================================================
# 메이븐 의존성을 미리 설치한다. 이 명령은 pom.xml 파일이 변경될 때만 다시 실행되므로, 이미지 빌드
# 시간을 줄일 수 있다. Docker는 각 RUN 명령을 별도의 레이어로 캐싱하므로, pom.xml 파일이 변경되지
# 않았다면 이 RUN 명령은 캐시에서 가져온다.
#
# NOTE: 'hello_world_console_app' 모듈은 의존성 사전 설치에서 제외한다. 이 모듈은 또다른 하위
#       프로젝트인 'hello_world_lib' 모듈에 의존하는데, 이 모듈은 이미 의존성 사전 설치에서
#       'go-offline'으로 실행할 경우에 아직 'hello_world_lib' 모듈이 없어 참조할 수 없기
#       때문에 오류가 발생한다. 따라서 'hello_world_console_app' 모듈은 의존성 사전 설치에서
#       제외한다. 메이븐에서 '프로파일'등을 통해서 특정 의존성을 선택적으로 제외할 방법이 없다.
#       참고로 이렇게 특정 하위 모듈 프로젝트를 의존성 사전 설치에서 제외하는 것은 복잡한
#       프로젝트에서는 모듈간의 의존성 관리가 쉽지 않기 때문에 권장하지 않는다.
RUN mvn -f /tmp/maven_pom_files/pom.xml -pl !hello_world_console_app dependency:go-offline && \
    rm -rf /tmp/maven_pom_files
