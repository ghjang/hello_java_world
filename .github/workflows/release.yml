name: Release

on:
  push:
    tags:
      - 'release-v*'

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/${{ github.repository_owner }}/dockers/alpine-3.19-with-jdk17-build-env:3.19-latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set TAG_VERSION
        run: |
          TAG_VERSION=${{ github.ref }} 
          TAG_VERSION=${TAG_VERSION#refs/tags/release-}
          echo "TAG_VERSION=${TAG_VERSION}" >> $GITHUB_ENV

      - name: Build with Maven
        run: |
          cd projects
          mvn -B package --file pom.xml

      # 참고로 각 step은 별도의 쉘에서 실행된다. 따라서 이전 step에서 'cd' 명령을 사용하여 디렉토리를
      # 변경하더라도 다음 step에서는 이전 step에서 변경한 디렉토리로 이동되지 않는다.
      - name: Create tar.gz
        run: |
          cd projects

          echo "pwd: $(pwd)"

          echo "hello_world_console_app/target :"
          ls -l hello_world_console_app/target

          echo "hello_world_console_app/target/*.jar :"
          ls -l hello_world_console_app/target/*.jar
          
          echo "hello_world_console_app/target/lib :"
          ls -l hello_world_console_app/target/lib

          cd hello_world_console_app/target
          tar -czvf ../../../hello_world_java-${{ env.TAG_VERSION }}.tar.gz hello_world_console_app*.jar lib
          cd ../../..

      - name: Create Release Notes
        uses: ghjang/actions/gen-release-notes@main

      - name: Set up GitHub CLI
        run: |
          mkdir -p ~/.config/gh
          echo "github.com:" > ~/.config/gh/hosts.yml
          echo "  oauth_token: ${{ secrets.GITHUB_TOKEN }}" >> ~/.config/gh/hosts.yml

      - name: Create Release
        run: |
          gh release create ${{ github.ref }} \
            --title "Release ${{ env.TAG_VERSION }}" \
            --notes-file _release-notes/${{ env.TAG_VERSION }}.md \
            --repo ${{ github.repository }} \
            --target ${{ github.sha }}

      - name: Upload Release Asset
        run: |
          gh release upload release-${{ env.TAG_VERSION }} \
            ./hello_world_java-${{ env.TAG_VERSION }}.tar.gz \
            --repo ${{ github.repository }}

      - name: Upload Combined Release Notes
        run: |
          gh release upload release-${{ env.TAG_VERSION }} \
            RELEASES_NOTES.md \
            --repo ${{ github.repository }}
